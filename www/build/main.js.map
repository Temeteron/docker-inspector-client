{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/pages/modal/modal.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/home/home.module.ts","../../src/components/components.module.ts","../../src/components/container/container.ts","../../src/components/stats/stats.ts","../../src/components/logs/logs.ts","../../src/providers/api/api.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 112;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 112\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 153;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 153\n// module chunks = 0","import { Component } from '@angular/core';\nimport { AlertController, ModalController } from 'ionic-angular';\n\n// IMPORT API AND MODAL PAGE\nimport { ApiProvider } from '../../providers/api/api';\nimport { ModalPage } from '../modal/modal';\n// import { Poll } from '../../utils/poll';\n\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  containers: Array<any> = [];               // CONTAINS ALL AVAILABLE CONTAINERS\n  images: Array<any> = [];                   // CONTAINS ALL AVAILABLE IMAGES\n  loading: boolean = false;                     // BOOLEAN TO SHOW LOADER WHEN ASYNC FUNCTION IS CALLED\n\n  container_to_show_stats: any = null;       // CONTAINER VARIABLE THAT IS PASSED TO 'STATS' COMPONENT\n  container_to_show_logs: any = null;        // CONTAINER VARIABLE THAT IS PASSED TO 'LOGS' COMPONENT\n\n  // MESSAGE TO SHOW IF THERE ARE NO CONTAINERS AVAILABLE\n  no_containers_messsage: string = \"Currently there are no containers. Create one from the bottom right button.\";\n\n  constructor( public api: ApiProvider, public modalCtrl: ModalController, private alertCtrl: AlertController) {\n    // GET CONTAINERS AND IMAGES\n    this.refreshContainers();\n    this.getAvailableImages();\n  }\n\n\n  // kapoou() {\n  //   new Poll(() => this.refreshContainers(), this.api.TIME_TO_REFRESH);\n  // }\n\n///////////////////////////////////////////////////////////////////////////\n// GET ALL CONTAINERS \n///////////////////////////////////////////////////////////////////////////\n  getAvailableContainers() {\n    console.log(\"getAvailableContainers\");\n    // ACTIVATE LOAD ICON\n    this.loading = true;\n\n    this.api.getListOfContainers().subscribe(res => {\n        // DEBUG MESSAGE\n        // console.log('Res getListOfContainers: ' + JSON.stringify(res));\n\n        // REFRESH CONTAINERS LIST\n        this.containers = res;\n\n        // STOP LOAD ICON\n        // setTimeout(() => {\n          this.loading = false;\n        // }, this.TIME_TO_REFRESH);\n\n    },\n      err => {\n\n        // STOP LOAD ICON\n          this.loading = false;\n\n        // DEBUG MESSAGE\n        console.error(\"Error while getListOfContainers: \" + JSON.stringify(err));\n\n        // ERROR MESSAGE TO SHOW\n        let msg = `Error while getting list of containers. Status: ${err.status}.`;\n        this.alertGlobal(msg);\n    });\n  }\n\n\n  refreshContainers() {\n    return new Promise(() => {\n      console.log('refreshContainers');\n      this.loading = true;\n\n      this.api.getListOfContainers().subscribe(res => {\n          // DEBUG MESSAGE\n          // console.log('Res getListOfContainers: ' + JSON.stringify(res));\n\n          // REFRESH CONTAINERS LIST\n          this.containers = res;\n          this.loading = false;\n          // setTimeout(() => {\n          //   this.load = false;\n          // }, this.TIME_TO_REFRESH - 2000);\n\n          setTimeout(() => {\n            this.refreshContainers();\n          }, this.api.TIME_TO_REFRESH);\n      });\n    });\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// GET ALL IMAGES\n///////////////////////////////////////////////////////////////////////////\n  getAvailableImages() {\n    this.api.getListOfImages().subscribe(res => {\n        // DEBUG MESSAGE\n        // console.log('Res getListOfImages: ' + JSON.stringify(res));\n\n        // EMPTY IMAGES LIST\n        this.images = [];\n\n        // MAP RESULT\n        res.map(img => {\n            this.images.push(img);\n        });\n    },\n      err => {\n        // DEBUG MESSAGE\n        console.error(\"Error while getListOfImages: \" + JSON.stringify(err));\n\n        // ERROR MESSAGE TO SHOW\n        let msg = `Error while getting list of images. Status: ${err.status}.`;\n        this.alertGlobal(msg);\n    });\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// MODAL TO CREATE CONTAINER FROM AVAILABLE IMAGE\n// AND/OR DOWNLOAD A NEW IMAGE BY WRITING THE NAME OF REPO\n///////////////////////////////////////////////////////////////////////////\n  createContainerModal() {\n    // CREATE MODAL AND PASS IMAGES\n    let modal = this.modalCtrl.create(ModalPage, {\n        images: this.images\n    });\n\n    // ON DISMISS OF MODAL GET NEW AVAILABLE IMAGES (IF ANY WAS PULLED)\n    // AND CONTAINERS LIST\n    modal.onDidDismiss(data => {\n\n      if (data) {\n\n        // UPDATE IMAGES\n        if (data.load_images) {\n          this.getAvailableImages();\n        }\n\n        // UPPDATE CONTAINERS\n        if (data.load_containers) {\n          this.getAvailableContainers();\n        }\n\n        // SHOW INFO MESSAGE\n        if (data.message) {\n          this.alertGlobal(data.message);\n        }\n\n      }\n\n    });\n\n    // SHOW MODAL\n    modal.present();\n  }\n\n/////////////////// COMMUNICATION WITH CONTAINER COMPONENTS  ////////////////////////\n\n///////////////////////////////////////////////////////////////////////////\n// CONTAINER'S STATE CHANGED (START, STOP, DELETE)\n///////////////////////////////////////////////////////////////////////////\n  stateOfContainerChanged(stateObj) {\n    console.log('stateOfContainerChanged');\n\n    // IF STOP DISABLE STATS,LOGS IF WERE ENABLED FOR THAT CONTAINER\n    if (stateObj.fun == 'stop') {\n      this.container_to_show_stats = this.assignDeactivateStatsLogs(stateObj.container, this.container_to_show_stats);\n      this.container_to_show_logs = this.assignDeactivateStatsLogs(stateObj.container, this.container_to_show_logs);\n    }\n\n    this.getAvailableContainers();\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// HELP FUNCTION TO DEACTIVATE STATS-LOGS\n// COMPONENT IF SELECTED CONTAINER STOPPED\n///////////////////////////////////////////////////////////////////////////\n  assignDeactivateStatsLogs(container, component) {\n    return (component ? ((container.Id == component.Id) ? null : component) : null);\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// EVENT EMMITER TO CATCH TRIGGER OF STATS FROM EACH COMPONENT\n///////////////////////////////////////////////////////////////////////////\n  onStats(container) {\n    // DEBUG MESSAGE\n    console.info('onStats');\n\n    // CHECK IF COMPONENT 'STATS' CONTAINS THE SAME COMNTAINER\n    // IF YES, DISABLE 'STATS' COMPONET\n    if (this.container_to_show_stats && (container.Id == this.container_to_show_stats.Id)) {\n      // DEBUG MESSAGE\n      console.log(\"Already Showing stats for this container. Will disable\");\n      \n      // EMPTY 'STATS' COMPONENT\n      this.container_to_show_stats = null;\n    } else {\n      // DEBUG MESSAGE\n      console.log(\"Activate stats on container: \" + container.Names[0]);\n      \n      // EMPTY AND ASSIGN AFTER 10MS TO RE-INITIALIZE\n      this.container_to_show_stats = null;\n      setTimeout(() => {\n        this.container_to_show_stats = container;\n      }, 10);\n    }\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// EVENT EMMITER TO CATCH TRIGGER OF LOGS FROM EACH COMPONENT\n///////////////////////////////////////////////////////////////////////////\n  onLogs(container) {\n    // DEBUG MESSAGE\n    console.info('onLogs');\n\n    // CHECK IF COMPONENT 'LOGS' CONTAINS THE SAME COMNTAINER\n    // IF YES, DISABLE 'LOGS' COMPONET\n    if (this.container_to_show_logs && (container.Id == this.container_to_show_logs.Id)) {\n      // DEBUG MESSAGE\n      console.log(\"Already Showing logs for this container. Will disable\");\n\n      // EMPTY 'LOGS' COMPONENT\n      this.container_to_show_logs = null;\n    } else {\n      // DEBUG MESSAGE\n      console.log(\"Activate logs on container: \" + container.Names[0]);\n\n      // EMPTY AND ASSIGN AFTER 10MS TO RE-INITIALIZE\n      this.container_to_show_logs = null;\n      setTimeout(() => {\n        this.container_to_show_logs = container;\n      }, 10);\n    }\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// EVENT EMMITER TO DACTIVATE STATS BECAUSE\n// CONTAINER IS NO LONGER RUNNING\n///////////////////////////////////////////////////////////////////////////\n  disableStatsComponent() {\n    this.container_to_show_stats = null;\n  }\n\n////////////////////////// PAGE HELPERS ///////////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////\n// IMPROVE FOR LOOPS REMDERIMG PERFORMANCE\n///////////////////////////////////////////////////////////////////////////\n  trackByFn(index, item) {\n    return item.Id;\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// ALERT MESSAGE FOR ERRORS\n///////////////////////////////////////////////////////////////////////////\n  alertGlobal(msg) {\n    let alert = this.alertCtrl.create({\n      title: 'TRADELINE',\n      subTitle: msg,\n      buttons: ['ok']\n    });\n    alert.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\nimport { NavParams, ViewController, LoadingController } from 'ionic-angular';\n\nimport { ApiProvider } from '../../providers/api/api';\n\n\n@Component({\n  selector: 'page-modal',\n  templateUrl: 'modal.html'\n})\nexport class ModalPage {\n  loader: any = null;                // LOADER VAR FOR ASYNC REQUESTS\n  images: any = null;                // ARRAY THAT CONTAINS AVAILABLE IMAGES\n  image_name: any = null;            // VARIABLE TO SAVE IMAGE NAME TO PULL\n\n  // EXAMPLE REPO NAMES TO PULL IMAGE\n  example_images: Array<string> = ['chentex/random-logger:latest', 'enhariharan/infinite-loop:latest', 'hello-world:latest'];\n\n  constructor(private loadingCtrl: LoadingController, private api: ApiProvider, public navParams: NavParams, public viewCtrl: ViewController) {\n    this.images = this.navParams.get('images');\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// PULL IMAGE FROM REPOSITORY\n///////////////////////////////////////////////////////////////////////////\n  pullImage() {\n    // BECAUSE A NEW IMAGE WAS PULLED INFORM PARENT TO \n    // GET THE NEW LIST OF IMAGES\n    let objMsg = {\n      'load_images': true,\n      'load_containers': false,\n      'message': ''\n    };\n\n    // SHOW LOADER\n    this.presentLoading();\n    this.api.pullImage(this.image_name).subscribe(res => {\n        // DEBUG MESSAGE\n        // console.log('Res pullImage: ' + JSON.stringify(res));\n\n        // DISMISS LOADER\n        this.dismissLoader();\n\n        // CHECK IF THERE IS A WARNING AND RETURN MESSAGE\n        objMsg.message = (res.status == 'Warning') ? (`Warning. ${res.message}`) : (res[res.length-1].status);\n\n        // DISMISS MODAL\n        this.dismiss(objMsg);\n    },\n      err => {\n        // DEBUG MESSAGE\n        console.error('Error pullImage: ' + JSON.stringify(err));\n\n        // DISMISS LOADER\n        this.dismissLoader();\n\n        // ERROR MESSAGE TO SHOW\n        objMsg.message = `Error: ${err.status}. ${err.statusText}`;\n        // CHECK IF SERVER IS DOWN, IF YES DONT MAKE FURTHER REQUESTS\n        objMsg.load_images = err.status == 0 ? false : true;\n\n        // DISMISS MODAL\n        this.dismiss(objMsg);\n    });\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// CREATE CONTAINER FROM GIVEN IMAGE\n///////////////////////////////////////////////////////////////////////////\n  createContainer(img_name) {\n    // BECAUSE A NEW CONTAINER WAS CREATED INFORM PARENT TO \n    // GET THE NEW LIST OF CONTAINERS\n    let objMsg = {\n      'load_images': false,\n      'load_containers': true,\n      'message': ''\n    };\n\n    // SHOW LOADER\n    this.presentLoading();\n    this.api.createContainer(img_name.toString()).subscribe(res => {\n        // DEBUG MESSAGE\n        // console.log('Res createContainer: ' + JSON.stringify(res));\n\n        // DISMISS LOADER\n        this.dismissLoader();\n\n        // DISMISS MODAL\n        this.dismiss(null);\n    },\n      err => {\n        // DEBUG MESSAGE\n        console.error('Error createContainer: ' + JSON.stringify(err));\n\n        // DISMISS LOADER\n        this.dismissLoader();\n\n        // ERROR MESSAGE TO SHOW\n        objMsg.message = `Error ${err.status}: ${err.statusText}`;\n        // CHECK IF SERVER IS DOWN, IF YES DONT MAKE FURTHER REQUESTS\n        objMsg.load_containers = err.status == 0 ? false : true;\n\n        // DISMISS MODAL\n        this.dismiss(objMsg);\n    });\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// DELETE IMAGE\n///////////////////////////////////////////////////////////////////////////\n  deleteImage(img_name) {\n    console.log('deleteImage: ' + img_name);\n    // BECAUSE A NEW CONTAINER WAS CREATED INFORM PARENT TO \n    // GET THE NEW LIST OF CONTAINERS\n    let objMsg = {\n      'load_images': true,\n      'load_containers': false,\n      'message': ''\n    };\n\n\n    // SHOW LOADER\n    this.presentLoading();\n    this.api.deleteImage(img_name.toString()).subscribe(res => {\n        // DEBUG MESSAGE\n        // console.log('Res deleteImage: ' + JSON.stringify(res));\n\n        // DISMISS LOADER\n        this.dismissLoader();\n\n        // MESSAGE TO SHOW\n        objMsg.message = 'Image deleted';\n\n        // DISMISS MODAL\n        this.dismiss(objMsg);\n    },\n      err => {\n        // DEBUG MESSAGE\n        console.error('Error deleteImage: ' + JSON.stringify(err));\n\n        // DISMISS LOADER\n        this.dismissLoader();\n\n        // ERROR MESSAGE TO SHOW\n        objMsg.message = `Error ${err.status}: ${err.statusText}`;\n        // CHECK IF SERVER IS DOWN, IF YES DONT MAKE FURTHER REQUESTS\n        objMsg.load_containers = err.status == 0 ? false : true;\n\n        // DISMISS MODAL\n        this.dismiss(objMsg);\n    });\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// SELECT IMAGE TO PULL\n///////////////////////////////////////////////////////////////////////////\n  selectImageToPull(name) {\n    this.image_name = name;\n  }\n\n////////////////////////////// PAGE HELPERS ///////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////\n// DISMIIS MODAL\n///////////////////////////////////////////////////////////////////////////\n  dismiss(data) {\n    this.viewCtrl.dismiss(data);\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// SHOW LOADER\n///////////////////////////////////////////////////////////////////////////\n  presentLoading() {\n    this.loader = this.loadingCtrl.create({\n      content: \"Please wait...\",\n    });\n\n    this.loader.present();\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// DISMISS LOADER\n///////////////////////////////////////////////////////////////////////////\n  dismissLoader() {\n    if (this.loader) {\n      this.loader.dismiss();\n      this.loader = null;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/modal/modal.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\n\nimport { MyApp } from './app.component';\nimport { HomePageModule } from '../pages/home/home.module';\nimport { ModalPage } from '../pages/modal/modal';\n\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { ApiProvider } from '../providers/api/api';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    ModalPage,\n  ],\n  imports: [\n    BrowserModule,\n    HomePageModule,\n    HttpModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp),\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    ModalPage,\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    ApiProvider,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: any = HomePage;\n\n  pages: Array<{title: string, component: any}>;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\n    this.initializeApp();\n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Home', component: HomePage },\n    ];\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule } from \"@angular/core\";\nimport { IonicPageModule } from \"ionic-angular\";\nimport { HomePage } from \"./home\";\nimport { ComponentsModule } from \"../../components/components.module\";\n\n@NgModule({\n  declarations: [HomePage],\n  imports: [\n    IonicPageModule.forChild(HomePage),\n    ComponentsModule\n  ]\n})\nexport class HomePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.module.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { ContainerComponent } from './container/container';\nimport { IonicPageModule } from \"ionic-angular\";\nimport { StatsComponent } from './stats/stats';\nimport { LogsComponent } from './logs/logs';\n@NgModule({\n\tdeclarations: [ContainerComponent,\n\tStatsComponent,\n\tLogsComponent],\n\timports: [IonicPageModule.forChild(ContainerComponent)],\n\texports: [ContainerComponent,\n\tStatsComponent,\n\tLogsComponent],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class ComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.module.ts","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AlertController, LoadingController } from 'ionic-angular';\nimport { ApiProvider } from \"../../providers/api/api\";\n\n@Component({\n  selector: 'container',\n  templateUrl: 'container.html'\n})\nexport class ContainerComponent {\n  @Input() container: any;                                         // CONTAINER OBJECTS PASSED FROM PARENT\n  @Output() stats = new EventEmitter<Object>();                    // VAR TO COMMUNICATE WITH PAREMT ABOUT STATS\n  @Output() logs = new EventEmitter<Object>();                     // VAR TO COMMUNICATE WITH PAREMT ABOUT LOGS\n  @Output() changedState = new EventEmitter<Object>();             // VAR TO COMMUNICATE WITH PARENT BECAUSE STATE CHANGED\n\n  colorStatus: string = 'colorBlue';                                // VAR TO CHANGE COLOR GREEN-BLUE DEPENDING ON STATUS\n  activeStats: boolean = false;                                     // VAR THAT INDICATES IF STATS ARE ACTIVE\n  activeLogs: boolean = false;                                      // VAR THAT INDICATES IF LOGS ARE ACTIVE\n  loader: any = null;                                               // LOADER VAR FOR ASYNC REQUESTS\n\n  constructor(public api: ApiProvider, public loadingCtrl: LoadingController, private alertCtrl: AlertController) {}\n\n///////////////////////////////////////////////////////////////////////////\n// CHECK IF CONTAINER IS RUNNING, SO THAT WE CAN \n// GIVE THE USER BUTTONS TO ACTIVATE STATS OR LOGS\n///////////////////////////////////////////////////////////////////////////\n  checkRunning(state) {\n    if (state == 'running') {\n      this.colorStatus = 'colorGreen';\n      return true;\n    } else {\n      this.colorStatus = 'colorBlue';\n      return false;\n    }\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// EMIT EVENT TO INFORM PARENT THAT STATS/LOGS\n// WAS TOGGLED, BY CLICKING BUTTONS\n///////////////////////////////////////////////////////////////////////////\n  toggleStatsLogs(toggleComponent) {\n    this[toggleComponent].emit(this.container);\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// START CONTAINER\n///////////////////////////////////////////////////////////////////////////\n  start() {\n    // SHOW LOADER\n    this.presentLoading();\n\n    // CALL TO SERVER\n    this.api.startContainer(this.container.Id).subscribe(res => {\n        console.log('Res startContainer: ' + JSON.stringify(res));\n\n        // EMIT EVENT TO PARENT TO CHANGE STATE OF CONTAINER\n        this.stateChanged('start');\n        //DISMISS LOADER\n        this.dismissInitLoader();\n    },\n      err => {\n        // DEBUG MESSAGE\n        console.error(\"Error startContainer: \" + JSON.stringify(err));\n        //DISMISS LOADER\n        this.dismissInitLoader();\n    });\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// STOP CONTAINER\n///////////////////////////////////////////////////////////////////////////\n  stop() {\n    // SHOW LOADER\n    this.presentLoading();\n\n    // CALL TO SERVER\n    this.api.stopContainer(this.container.Id).subscribe(res => {\n        // DEBUG MESSAGE\n        console.log('Res stopContainer: ' + JSON.stringify(res));\n\n        // EMIT EVENT TO PARENT TO CHANGE STATE OF CONTAINER\n        this.stateChanged('stop');\n        //DISMISS LOADER\n        this.dismissInitLoader();\n    },\n      err => {\n        // DEBUG MESSAGE\n        console.error(\"Error stopContainer: \" + JSON.stringify(err));\n\n        //DISMISS LOADER\n        this.dismissInitLoader();\n    });\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// DELETE CONTAINER, IF IT IS RUNNING\n// NOTHING WILL HAPPEN, EMPTY RESPONSE FROM SERVER\n///////////////////////////////////////////////////////////////////////////\n  delete() {\n    // SHOW LOADER\n    this.presentLoading();\n\n    // CALL TO SERVER\n    this.api.deleteContainer(this.container.Id).subscribe(res => {\n      // DEBUG MESSAGE\n        console.log('Res deleteContainer: ' + JSON.stringify(res));\n\n        // EMIT EVENT TO PARENT TO CHANGE STATE OF CONTAINER\n        this.stateChanged('delete');\n        //DISMISS LOADER\n        this.dismissInitLoader();\n    },\n      err => {\n        // DEBUG MESSAGE\n        console.error(\"Error deleteContainer: \" + JSON.stringify(err));\n\n        //DISMISS LOADER\n        this.dismissInitLoader();\n\n        // ERROR MESSAGE TO SHOW\n        let msg = `Error: ${err.status}. ${err.statusText}. Cannot delete while running.`\n        this.alertGlobal(msg);\n    });\n  }\n\n\n///////////////////////////////////////////////////////////////////////////\n// EMIT EVENT TO PARENT THAT\n// STATE WAS CHANGED (RUNNING, EXITED, CREATED)\n///////////////////////////////////////////////////////////////////////////\n  stateChanged(fun) {\n    // DEBUG MESSAGE\n    console.log(\"stateChanged\");\n\n    let stateObj = {\n      \"container\": this.container,\n      \"fun\": fun\n    }\n\n    this.changedState.emit(stateObj);\n  }\n\n////////////////////////////// PAGE HELPERS ///////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////\n// SHOW LOADING POPUP\n///////////////////////////////////////////////////////////////////////////\n  presentLoading() {\n    this.loader = this.loadingCtrl.create({\n      content: \"Please wait...\",\n    });\n\n    this.loader.present();\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// DISMISS LOADER POPUP\n///////////////////////////////////////////////////////////////////////////\n  dismissInitLoader() {\n    if (this.loader) {\n      this.loader.dismiss();\n      this.loader = null;\n    }\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// ALERT MESSAGE FOR ERRORS\n///////////////////////////////////////////////////////////////////////////\n  alertGlobal(msg) {\n    let alert = this.alertCtrl.create({\n      title: 'TRADELINE',\n      subTitle: msg,\n      buttons: ['ok']\n    });\n    alert.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/container/container.ts","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ApiProvider } from \"../../providers/api/api\";\n\n\n@Component({\n  selector: 'stats',\n  templateUrl: 'stats.html'\n})\nexport class StatsComponent {\n  @Input() container: any = null;                                            // INPUT OF COMPONENT\n  @Output() containerStopped = new EventEmitter<Object>();                    // VAR TO COMMUNICATE WITH PAREMT ABOUT UNEXPECTED ERROR\n  stats: any = null;                                                         // STATS OBJECT\n  loading: boolean = false;                                                  // BOOLEAN TO SHOW LOADER WHEN ASYNC FUNCTION IS CALLED\n\n  constructor(public api: ApiProvider) {\n    setTimeout(() => {\n      this.getStats();\n    }, 0);\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// GET STATS FOR RUNNING CONTAINER\n///////////////////////////////////////////////////////////////////////////\n  getStats() {\n    // CHECK IF CONTAINER IS PASSED\n    if (this.container) {\n      this.loading = true;\n      // CALL TO SERVER\n      this.api.getStatsOfContainer(this.container.Id).subscribe(res => {\n          // DEBUG MESSAGE\n          // console.log('Res getStatsOfContainer: ' + JSON.stringify(res));\n          this.loading = false;\n          \n          // DEACTIVATE COMPONENT - CONTAINER HAS STOPPED\n          if (!res.pids_stats.current) {\n            console.warn('CONTAINER STOPPED - DISABLING STATS');\n            this.disableStatsComponent();\n          } else {\n            this.stats = res;\n            setTimeout(() => {\n              this.getStats();\n            }, this.api.TIME_TO_REFRESH);\n          }\n      },\n        err => {\n          // DEBUG MESSAGE\n          this.loading = false;\n          console.error(\"Error while getStatsOfContainer: \" + JSON.stringify(err));\n\n          // DEACTIVATE COMPONENT - CONTAINER HAS STOPPED\n          this.disableStatsComponent();\n      });\n    }\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// EMIT EVENT TO PARENT TO DISABLE COMPONENT\n///////////////////////////////////////////////////////////////////////////\n  disableStatsComponent() {\n    this.containerStopped.emit(true);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/stats/stats.ts","import { Component, Input } from '@angular/core';\nimport { ApiProvider } from \"../../providers/api/api\";\n\n\n@Component({\n  selector: 'logs',\n  templateUrl: 'logs.html'\n})\nexport class LogsComponent {\n  @Input() container: any;              // INPUT OF COMPONENT\n  logs: Array<string> = [];             // LOGS ARRAY\n  date: Date = new Date();              // CURRENT DATE\n  loading: boolean = false;             // BOOLEAN TO SHOW LOADER WHEN ASYNC FUNCTION IS CALLED\n\n\n  constructor(public api: ApiProvider) {\n    // GET LOGS\n    setTimeout(() => {\n      this.getLogs();\n    }, 0);\n\n    // PUSH INIT LOG TO ARRAY OF LOGS\n    let dateToPrint = this.getMediumDate();\n    let logToAdd = dateToPrint+' ...';\n    this.logs.push(logToAdd);\n\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// GET LOGS FROM SERVER\n///////////////////////////////////////////////////////////////////////////\n  getLogs() {\n    // CHECK IF CONTAINER IS PASSED\n    if (this.container) {\n        this.loading = true;\n        // CALL TO SERVER\n        this.api.getLogsOfContainer(this.container.Id).subscribe(res => {\n          // DEBUG MESSAGE\n          // console.log('Res getLogsOfContainer: ' + JSON.stringify(res));\n\n          this.loading = false;\n\n          // UPDATE DATE\n          this.date = new Date();\n\n          // IF LOG IS NON-EMPTY CONCAT OUTPUT\n          if (res) {\n              this.addToLogs(res.split('\\n'));\n          }\n\n          setTimeout(() => {\n            this.getLogs();\n          }, this.api.TIME_TO_REFRESH);\n        },\n          err => {\n            // DEBUG MESSAGE\n            this.loading = false;\n            console.error(\"Error while getLogsOfContainer: \" + JSON.stringify(err));\n        });\n    }\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// CONCAT LOGS TO OUTPUT - 10 LOGS MAX\n///////////////////////////////////////////////////////////////////////////\n  addToLogs(log) {\n    let helpLogs = this.logs.concat(log);\n    this.logs = helpLogs.slice(Math.max(helpLogs.length-10, 0));\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// FORMAT DATE\n///////////////////////////////////////////////////////////////////////////\n  getMediumDate() {\n    this.date = new Date();\n    return '('+this.date.getHours()+':'+this.date.getMinutes()+':'+this.date.getSeconds()+')';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/logs/logs.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class ApiProvider {\n  TIME_TO_REFRESH: number = 2000;              // CONSTANT THAT INDICADES HOW OFTEN WE REFRESH COMPONENTS\n  baseApiUrl = 'http://localhost:3000';        // SERVER ADDRESS TO MAKE REQUESTS\n\n  constructor(public http: HttpClient) {}\n\n///////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////// GET //////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////\n// GET STATS OF CONTAINER\n///////////////////////////////////////////////////////////////////////////\n  getStatsOfContainer(id): Observable<any> {\n\n    return this.http.get(`${this.baseApiUrl}/get_stats_of_container/${id}`);\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// GET STATS OF CONTAINER\n///////////////////////////////////////////////////////////////////////////\n  getLogsOfContainer(id): Observable<any> {\n\n    return this.http.get(`${this.baseApiUrl}/get_logs_of_container/${id}`);\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// GET LIST OF CONTAINERS\n///////////////////////////////////////////////////////////////////////////\n  getListOfContainers(): any {\n\n    return this.http.get(`${this.baseApiUrl}/get_list_of_containers`);\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// GET LIST AVAILABLE IMAGES\n///////////////////////////////////////////////////////////////////////////\n  getListOfImages(): Observable<any> {\n\n    return this.http.get(`${this.baseApiUrl}/get_list_of_images`);\n  }\n\n///////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////// POST //////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////\n// PULL DOCKER IMAGE BY NAME\n///////////////////////////////////////////////////////////////////////////\n  pullImage(repo_name): Observable<any> {\n    let data = { repo_name: repo_name };\n\n    return this.http.post(`${this.baseApiUrl}/pull_docker`, data);\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// DELETE DOCKER IMAGE BY NAME\n///////////////////////////////////////////////////////////////////////////\n  deleteImage(repo_name): Observable<any> {\n    let data = { repo_name: repo_name };\n\n    return this.http.post(`${this.baseApiUrl}/delete_docker`, data);\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// CREATE CONTAINER FROM SPECIFIED IMAGE NAME (enhariharan/infinite-loop)\n///////////////////////////////////////////////////////////////////////////\n  createContainer(repo_name): Observable<any> {\n    let data = { repo_name: repo_name };\n\n    return this.http.post(`${this.baseApiUrl}/create_container`, data);\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// START CONTAINER\n///////////////////////////////////////////////////////////////////////////\n  startContainer(id): Observable<any> {\n    return this.http.post(`${this.baseApiUrl}/start_container/${id}`, {});\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// STOP CONTAINER\n///////////////////////////////////////////////////////////////////////////\n  stopContainer(id): Observable<any> {\n    return this.http.post(`${this.baseApiUrl}/stop_container/${id}`, {});\n  }\n\n///////////////////////////////////////////////////////////////////////////\n// DELETE CONTAINER\n///////////////////////////////////////////////////////////////////////////\n  deleteContainer(id): Observable<any> {\n    return this.http.post(`${this.baseApiUrl}/delete_container/${id}`, {});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/api/api.ts"],"sourceRoot":""}